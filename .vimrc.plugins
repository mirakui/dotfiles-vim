" vim:set filetype=vim:
"================================================================================
" NeoBundle header
"================================================================================
set nocompatible
filetype off

if has('vim_starting')
  set runtimepath+=~/.vim/bundle/neobundle.vim
endif

call neobundle#begin(expand('~/.vim/bundle'))

" let Vundle manage Vundle
" required
NeoBundle 'gmarik/vundle'
NeoBundle 'snipMate'
NeoBundle 'https://github.com/cakebaker/scss-syntax.vim.git'
NeoBundle 'groenewege/vim-less'
NeoBundle 'slim-template/vim-slim'
NeoBundle 'vim-coffee-script'
NeoBundle 'The-NERD-tree'
NeoBundle 'https://github.com/tyru/open-browser.vim.git'
NeoBundle 'https://github.com/tyru/open-browser-github.vim.git'

"================================================================================
" fugitive.vim
"================================================================================
NeoBundle 'fugitive.vim'
set statusline=%<[%n]%m%r%h%w%{'['.(&fenc!=''?&fenc:&enc).':'.&ff}%{']'}%y%{fugitive#statusline()}\ %F%=%l,%c%V%8P
nnoremap <unique> gG :exec ':silent Ggrep ' . expand('<cword>')<CR>

"================================================================================
" vimfile
"================================================================================
NeoBundle 'Shougo/vimfiler'
let g:vimfiler_edit_command = 'tabedit'

"================================================================================
" unite.vim
"================================================================================
NeoBundle 'git://github.com/Shougo/unite.vim.git'
" 入力モードで開始する
let g:unite_enable_start_insert=1
" nnoremap <silent> UU :<C-u>UniteWithCurrentDir buffer_tab file_mru file<CR>
nnoremap <silent> B :<C-u>Unite buffer file_mru<CR>
nnoremap <silent> <Space>u :<C-u>Unite buffer file_mru<CR>
" nnoremap <silent> Uf :<C-u>UniteWithCurrentDir file buffer<CR>

" ESCキーを2回押すと終了する
au FileType unite nnoremap <silent> <buffer> <ESC><ESC> q
au FileType unite inoremap <silent> <buffer> <ESC><ESC> <ESC>q

NeoBundle 'git://github.com/taka84u9/unite-git.git'
nnoremap <silent> <C-g> :<C-u>Unite git_cached<CR>

NeoBundle 'Shougo/neomru.vim'
"================================================================================
" rails.vim
"================================================================================
NeoBundle 'https://github.com/tpope/vim-rails.git'
autocmd BufNewFile,BufRead app/**/*.rhtml set fenc=utf-8
autocmd BufNewFile,BufRead app/**/*.erb set fenc=utf-8
autocmd BufNewFile,BufRead app/**/*.haml set fenc=utf-8
autocmd BufNewFile,BufRead app/**/*.rb set fenc=utf-8

autocmd BufNewFile,BufRead *.thor set filetype=ruby
autocmd BufNewFile,BufRead Thorfile set filetype=ruby

" rails.vim
let g:rails_level=4
let g:rails_statusline=1
" ruby omin complete
let g:rubycomplete_rails = 1

"================================================================================
" neocomplcache
"================================================================================
NeoBundle 'Shougo/neocomplcache'
let g:neocomplcache_enable_at_startup = 1
let g:neocomplcache_enable_auto_select = 1

" Use smartcase.
let g:neocomplcache_enable_smart_case = 1
" Use camel case completion.
let g:neocomplcache_enable_camel_case_completion = 1
" Use underbar completion.
let g:neocomplcache_enable_underbar_completion = 1
" Set minimum syntax keyword length.
let g:neocomplcache_min_syntax_length = 3

imap <expr><TAB> neocomplcache#sources#snippets_complete#expandable() ? "\<Plug>(neocomplcache_snippets_expand)" : pumvisible() ? "\<C-n>" : "\<TAB>"
" <CR>: close popup and save indent.
" inoremap <expr><CR>  neocomplcache#smart_close_popup() . (&indentexpr != '' " ? "\<C-f>\<CR>X\<BS>":"\<CR>")
" <TAB>: completion.
inoremap <expr><TAB>  pumvisible() ? "\<C-n>" : "\<TAB>"
" <C-h>, <BS>: close popup and delete backword char.
inoremap <expr><C-h> neocomplcache#smart_close_popup()."\<C-h>"
inoremap <expr><BS> neocomplcache#smart_close_popup()."\<C-h>"
inoremap <expr><C-y>  neocomplcache#close_popup()

"================================================================================
" vimshell
"================================================================================
" vimproc needs to make -f make_mac.mk
NeoBundle 'https://github.com/Shougo/vimproc.git'
NeoBundle 'https://github.com/Shougo/vimshell.git'

"================================================================================
" NERDTree
"================================================================================
nnoremap <silent> <Space>n :NERDTreeFind<CR>

"================================================================================
" Puppet-Syntax-Highlighting
"================================================================================
NeoBundle 'Puppet-Syntax-Highlighting'
au BufNewFile,BufRead *.pp set filetype=puppet

"================================================================================
" Slim
"================================================================================
au BufNewFile,BufRead *.slim set filetype=slim

"================================================================================
" Golang
"================================================================================
" http://qiita.com/methane/items/4905f40e4772afec3e60

let g:gofmt_command = 'goimports'
set rtp+=${GOROOT}/misc/vim
set rtp+=${GOPATH}/src/github.com/nsf/gocode/vim
au BufWritePre *.go Fmt
au BufNewFile,BufRead *.go set sw=4 noexpandtab ts=4 sts=4 nolist
au FileType go compiler go

"================================================================================
" Rust
"================================================================================
NeoBundle 'rust-lang/rust.vim'
let g:rustfmt_autosave = 1

"================================================================================
" NeoBundle footer
"================================================================================
call neobundle#end()

filetype plugin on
filetype indent on
